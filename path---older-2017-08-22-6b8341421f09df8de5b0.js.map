{"version":3,"sources":["webpack:///path---older-2017-08-22-6b8341421f09df8de5b0.js","webpack:///./.cache/json/older-2017-08-22.json"],"names":["webpackJsonp","459","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,gBAAAC,OAAA,aAA6CC,gBAAmBC,GAAA,+GAAAC,KAAA,gikBAA0jlBC,aAAkVL,MAAA,sCAAAM,KAAA,qBAAyEC,aAAgBC,KAAA,qBAAAC,UAAwCC,QAAUF,KAAA,sBAA4BH,aAAgBL,MAAA,mBAA0BW,MAASD,QAAUF,KAAA,sBAA4BH,aAAgBL,MAAA","file":"path---older-2017-08-22-6b8341421f09df8de5b0.js","sourcesContent":["webpackJsonp([160882288315340],{\n\n/***/ 459:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/80253170/iserver/deepcoldy.github.io/src/pages/older/2017-08-22.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>续上篇：<a href=\\\"https://blog.iscode.cn/post/jing-yan-zong-jie/shi-yong-webhook-nodejsjiang-dai-ma-zi-dong-bu-shu-fu-wu-qi\\\">使用WEBHOOK+NODEJS将GIT项目代码自动部署服务器</a></p>\\n<h2>前言</h2>\\n<p>上篇讲到，根据判断文件路径是否有git pull的方式来判断是否需要重新build项目，但是这样会遇到一些问题，比如：有时候路径过长，shell中可能会自动隐藏一部分文件路径，这样就不能触发build了。\\n针对这种情况，我来改进一下webhook.js。</p>\\n<h2>开工</h2>\\n<p>之前引入的模块不变，在此基础上增加了<a href=\\\"https://github.com/paulmillr/chokidar\\\">chokidar</a>这个模块，能很好的监听文件的变化。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> createHandler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'node-gitlab-webhook'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> spawn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'child_process'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>spawn</code></pre>\\n      </div>\\n<p>为什么使用chokidar而不使用node自带的fs.watch呢？chokidar官方文档很好的回答了这个问题。\\n<img src=\\\"http://ac-HSNl7zbI.clouddn.com/4bxDRUJvPsjw8j4U3fWM0Gr1kKYRa4D1PL2FV9te.jpg\\\"></p>\\n<h2>结合chokidar</h2>\\n<p><code class=\\\"language-text\\\">chokidar.watch</code>方法定义了监听的路径。\\non方法可以传入两个参数，第一个是监听文件变化的类型，第二个是回调Function。我这边肯定是有变化我就要重新build，所以第一个参数是all。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\nchokidar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/iserver/wx_weiche/vue/src/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'all'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event<span class=\\\"token punctuation\\\">,</span> path</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>push_event<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">//每次pull只会进入一次</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'vue project building...'</span><span class=\\\"token punctuation\\\">)</span>\\n      push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./build.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'push'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">'Received a push event for %s'</span><span class=\\\"token punctuation\\\">,</span>\\n    event<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">.</span>repository<span class=\\\"token punctuation\\\">.</span>name\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/push'</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./pull.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">//每次git pull操作会打开push_event开关 </span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">break</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>可以注意到回调函数里我加了一个setTimeout，这边是为了延迟build的操作，因为当git pull受网络因素和人为因素的影响完成并不会非常及时。\\n另外我认为一次pull只需要执行一次build操作，那么我在pull的时候设置<code class=\\\"language-text\\\">push_event = true</code>，在chokidar的回调中来判断是否已经有build命令在执行了。</p>\\n<h2>完整代码</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> createHandler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'node-gitlab-webhook'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> spawn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'child_process'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>spawn\\n<span class=\\\"token keyword\\\">var</span> handler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createHandler</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span> <span class=\\\"token comment\\\">// multiple handlers</span>\\n  <span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/push'</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\nhttp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    res<span class=\\\"token punctuation\\\">.</span>statusCode <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">404</span>\\n    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'no such location test'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">7777</span><span class=\\\"token punctuation\\\">)</span>\\n\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Error:'</span><span class=\\\"token punctuation\\\">,</span> err<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">rumCommand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">cmd<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> child <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">spawn</span><span class=\\\"token punctuation\\\">(</span>cmd<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span>\\n  child<span class=\\\"token punctuation\\\">.</span>stdout<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">buffer</span> <span class=\\\"token operator\\\">=></span> response <span class=\\\"token operator\\\">+=</span> buffer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  child<span class=\\\"token punctuation\\\">.</span>stdout<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'end'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> chokidar <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'chokidar'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">let</span> push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n\\nchokidar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/iserver/wx_weiche/vue/src/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'all'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event<span class=\\\"token punctuation\\\">,</span> path</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>push_event<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'vue project building...'</span><span class=\\\"token punctuation\\\">)</span>\\n      push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./build.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'push'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">'Received a push event for %s'</span><span class=\\\"token punctuation\\\">,</span>\\n    event<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">.</span>repository<span class=\\\"token punctuation\\\">.</span>name\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/push'</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./pull.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">break</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>至此该工具也就开发的差不多，在我们的测试环境已经运行了很久了，不仅节省了我们的修复Bug的时间，也更加省心避免了误操作的可能。</p>\\n<h2>后期优化的可能</h2>\\n<p>作为一个测试服务器的自动build工具，已经足够使用了，然而思考到如何才能进一步提升测试效率，想到可以在测试服务器同本地开发环境一样使用hot reload的形式，但是这样可能会涉及到跟build出来的文件不一致的问题，暂时还没有想到更好的思路，如果看到此的你有更好的方法拜托请指出，多谢了~</p>\",\"frontmatter\":{\"title\":\"使用WEBHOOK+NODEJS将GIT项目代码自动部署服务器-进阶版\",\"date\":\"August 22, 2017\"}}},\"pathContext\":{\"slug\":\"/older/2017-08-22/\",\"previous\":{\"fields\":{\"slug\":\"/older/2017-08-21/\"},\"frontmatter\":{\"title\":\"JS跨域实际项目中的解决方式\"}},\"next\":{\"fields\":{\"slug\":\"/older/2017-08-29/\"},\"frontmatter\":{\"title\":\"ES6那些我不常用却很有用的知识\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---older-2017-08-22-6b8341421f09df8de5b0.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/80253170/iserver/deepcoldy.github.io/src/pages/older/2017-08-22.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>续上篇：<a href=\\\"https://blog.iscode.cn/post/jing-yan-zong-jie/shi-yong-webhook-nodejsjiang-dai-ma-zi-dong-bu-shu-fu-wu-qi\\\">使用WEBHOOK+NODEJS将GIT项目代码自动部署服务器</a></p>\\n<h2>前言</h2>\\n<p>上篇讲到，根据判断文件路径是否有git pull的方式来判断是否需要重新build项目，但是这样会遇到一些问题，比如：有时候路径过长，shell中可能会自动隐藏一部分文件路径，这样就不能触发build了。\\n针对这种情况，我来改进一下webhook.js。</p>\\n<h2>开工</h2>\\n<p>之前引入的模块不变，在此基础上增加了<a href=\\\"https://github.com/paulmillr/chokidar\\\">chokidar</a>这个模块，能很好的监听文件的变化。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> createHandler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'node-gitlab-webhook'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> spawn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'child_process'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>spawn</code></pre>\\n      </div>\\n<p>为什么使用chokidar而不使用node自带的fs.watch呢？chokidar官方文档很好的回答了这个问题。\\n<img src=\\\"http://ac-HSNl7zbI.clouddn.com/4bxDRUJvPsjw8j4U3fWM0Gr1kKYRa4D1PL2FV9te.jpg\\\"></p>\\n<h2>结合chokidar</h2>\\n<p><code class=\\\"language-text\\\">chokidar.watch</code>方法定义了监听的路径。\\non方法可以传入两个参数，第一个是监听文件变化的类型，第二个是回调Function。我这边肯定是有变化我就要重新build，所以第一个参数是all。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\nchokidar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/iserver/wx_weiche/vue/src/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'all'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event<span class=\\\"token punctuation\\\">,</span> path</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>push_event<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">//每次pull只会进入一次</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'vue project building...'</span><span class=\\\"token punctuation\\\">)</span>\\n      push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./build.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'push'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">'Received a push event for %s'</span><span class=\\\"token punctuation\\\">,</span>\\n    event<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">.</span>repository<span class=\\\"token punctuation\\\">.</span>name\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/push'</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./pull.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">//每次git pull操作会打开push_event开关 </span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">break</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>可以注意到回调函数里我加了一个setTimeout，这边是为了延迟build的操作，因为当git pull受网络因素和人为因素的影响完成并不会非常及时。\\n另外我认为一次pull只需要执行一次build操作，那么我在pull的时候设置<code class=\\\"language-text\\\">push_event = true</code>，在chokidar的回调中来判断是否已经有build命令在执行了。</p>\\n<h2>完整代码</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">var</span> http <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'http'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> createHandler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'node-gitlab-webhook'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> spawn <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'child_process'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>spawn\\n<span class=\\\"token keyword\\\">var</span> handler <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createHandler</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span> <span class=\\\"token comment\\\">// multiple handlers</span>\\n  <span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'/push'</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\nhttp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">,</span> res<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    res<span class=\\\"token punctuation\\\">.</span>statusCode <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">404</span>\\n    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'no such location test'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">7777</span><span class=\\\"token punctuation\\\">)</span>\\n\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Error:'</span><span class=\\\"token punctuation\\\">,</span> err<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">rumCommand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">cmd<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> child <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">spawn</span><span class=\\\"token punctuation\\\">(</span>cmd<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span>\\n  child<span class=\\\"token punctuation\\\">.</span>stdout<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'data'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">buffer</span> <span class=\\\"token operator\\\">=></span> response <span class=\\\"token operator\\\">+=</span> buffer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  child<span class=\\\"token punctuation\\\">.</span>stdout<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'end'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> chokidar <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'chokidar'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">let</span> push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n\\nchokidar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/iserver/wx_weiche/vue/src/'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'all'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event<span class=\\\"token punctuation\\\">,</span> path</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=></span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>push_event<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'vue project building...'</span><span class=\\\"token punctuation\\\">)</span>\\n      push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./build.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nhandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'push'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">event</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">'Received a push event for %s'</span><span class=\\\"token punctuation\\\">,</span>\\n    event<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">.</span>repository<span class=\\\"token punctuation\\\">.</span>name\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/push'</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token function\\\">rumCommand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'sh'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'./pull.sh'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">txt</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        push_event <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>txt<span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">break</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\\n<p>至此该工具也就开发的差不多，在我们的测试环境已经运行了很久了，不仅节省了我们的修复Bug的时间，也更加省心避免了误操作的可能。</p>\\n<h2>后期优化的可能</h2>\\n<p>作为一个测试服务器的自动build工具，已经足够使用了，然而思考到如何才能进一步提升测试效率，想到可以在测试服务器同本地开发环境一样使用hot reload的形式，但是这样可能会涉及到跟build出来的文件不一致的问题，暂时还没有想到更好的思路，如果看到此的你有更好的方法拜托请指出，多谢了~</p>\",\"frontmatter\":{\"title\":\"使用WEBHOOK+NODEJS将GIT项目代码自动部署服务器-进阶版\",\"date\":\"August 22, 2017\"}}},\"pathContext\":{\"slug\":\"/older/2017-08-22/\",\"previous\":{\"fields\":{\"slug\":\"/older/2017-08-21/\"},\"frontmatter\":{\"title\":\"JS跨域实际项目中的解决方式\"}},\"next\":{\"fields\":{\"slug\":\"/older/2017-08-29/\"},\"frontmatter\":{\"title\":\"ES6那些我不常用却很有用的知识\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/older-2017-08-22.json\n// module id = 459\n// module chunks = 160882288315340"],"sourceRoot":""}