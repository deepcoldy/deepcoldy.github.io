{"version":3,"sources":["webpack:///path---react-2019-05-25-00e1adf1101e117e0be3.js","webpack:///./.cache/json/react-2019-05-25.json"],"names":["webpackJsonp","476","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,gBAAAC,OAAA,aAA6CC,gBAAmBC,GAAA,+GAAAC,KAAA,szMAAw6MC,aAA4SL,MAAA,yCAAAM,KAAA,kBAAyEC,aAAgBC,KAAA,qBAAAC,UAAwCC,QAAUF,KAAA,sBAA4BH,aAAgBL,MAAA,iBAAwBW,MAASD,QAAUF,KAAA,2BAAiCH,aAAgBL,MAAA","file":"path---react-2019-05-25-00e1adf1101e117e0be3.js","sourcesContent":["webpackJsonp([250365697283324],{\n\n/***/ 476:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/80253170/iserver/deepcoldy.github.io/src/pages/react/2019-05-25.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>在React中写Typescript有很多奇技淫巧，下面来介绍一个在实际工作中遇到的真实场景。</p>\\n<p>其中用到了Typescript的泛型和Infer。</p>\\n<p>这是一个简单的demo，目的是渲染一个列表出来。</p>\\n<p>目前给<code class=\\\"language-text\\\">List</code>组件传入了<code class=\\\"language-text\\\">dataSource</code>和<code class=\\\"language-text\\\">renderItem</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">demo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> dataSource <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>a<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">{</span>b<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">{</span>v<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'3'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>List\\n      dataSource<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>dataSource<span class=\\\"token punctuation\\\">}</span>\\n      renderItem<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">,</span> c <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>a <span class=\\\"token operator\\\">||</span> b <span class=\\\"token operator\\\">||</span>c<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>如何定义<code class=\\\"language-text\\\">List</code>组件？\\n如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">function</span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">:</span> IListProps<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 可见这里的泛型没有实际使用，但一定要传，原因往下看。</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dataSource<span class=\\\"token punctuation\\\">,</span> renderItem<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>passProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> props<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>ListContainer <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>passProps<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span>dataSource<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token parameter\\\">ReactElement</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">renderItem</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cloneElement</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n            key<span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ListContainer<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>如果只是</p>\\n<p><a href=\\\"https://stackoverflow.com/questions/41253310/typescript-retrieve-element-type-information-from-array-type\\\">https://stackoverflow.com/questions/41253310/typescript-retrieve-element-type-information-from-array-type</a></p>\",\"frontmatter\":{\"title\":\"Typescript在React的Hooks中RenderItem该如何定义\",\"date\":\"May 25, 2018\"}}},\"pathContext\":{\"slug\":\"/react/2019-05-25/\",\"previous\":{\"fields\":{\"slug\":\"/react/2018-10-23/\"},\"frontmatter\":{\"title\":\"更好的Redux使用方式\"}},\"next\":{\"fields\":{\"slug\":\"/miniprogram/2018-9-15/\"},\"frontmatter\":{\"title\":\"Taro与小程序哪些你不得不注意的事\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---react-2019-05-25-00e1adf1101e117e0be3.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/80253170/iserver/deepcoldy.github.io/src/pages/react/2019-05-25.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>在React中写Typescript有很多奇技淫巧，下面来介绍一个在实际工作中遇到的真实场景。</p>\\n<p>其中用到了Typescript的泛型和Infer。</p>\\n<p>这是一个简单的demo，目的是渲染一个列表出来。</p>\\n<p>目前给<code class=\\\"language-text\\\">List</code>组件传入了<code class=\\\"language-text\\\">dataSource</code>和<code class=\\\"language-text\\\">renderItem</code>。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">demo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> dataSource <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span>a<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">{</span>b<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">{</span>v<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'3'</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>List\\n      dataSource<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>dataSource<span class=\\\"token punctuation\\\">}</span>\\n      renderItem<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">,</span> c <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>a <span class=\\\"token operator\\\">||</span> b <span class=\\\"token operator\\\">||</span>c<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>如何定义<code class=\\\"language-text\\\">List</code>组件？\\n如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">function</span> List<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">:</span> IListProps<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">// 可见这里的泛型没有实际使用，但一定要传，原因往下看。</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> dataSource<span class=\\\"token punctuation\\\">,</span> renderItem<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>passProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> props<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>ListContainer <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>passProps<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">{</span>dataSource<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token parameter\\\">ReactElement</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">renderItem</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cloneElement</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n            key<span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ListContainer<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>如果只是</p>\\n<p><a href=\\\"https://stackoverflow.com/questions/41253310/typescript-retrieve-element-type-information-from-array-type\\\">https://stackoverflow.com/questions/41253310/typescript-retrieve-element-type-information-from-array-type</a></p>\",\"frontmatter\":{\"title\":\"Typescript在React的Hooks中RenderItem该如何定义\",\"date\":\"May 25, 2018\"}}},\"pathContext\":{\"slug\":\"/react/2019-05-25/\",\"previous\":{\"fields\":{\"slug\":\"/react/2018-10-23/\"},\"frontmatter\":{\"title\":\"更好的Redux使用方式\"}},\"next\":{\"fields\":{\"slug\":\"/miniprogram/2018-9-15/\"},\"frontmatter\":{\"title\":\"Taro与小程序哪些你不得不注意的事\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/react-2019-05-25.json\n// module id = 476\n// module chunks = 250365697283324"],"sourceRoot":""}