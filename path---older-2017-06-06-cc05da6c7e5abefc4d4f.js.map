{"version":3,"sources":["webpack:///path---older-2017-06-06-cc05da6c7e5abefc4d4f.js","webpack:///./.cache/json/older-2017-06-06.json"],"names":["webpackJsonp","566","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","fields","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,gBAAAC,OAAA,aAA6CC,gBAAmBC,GAAA,oGAAAC,KAAA,2jCAAAC,aAA4sCL,MAAA,oBAAAM,KAAA,mBAAqDC,aAAgBC,KAAA,qBAAAC,UAAwCC,QAAUF,KAAA,sBAA4BH,aAAgBL,MAAA,oCAA2CW,MAASD,QAAUF,KAAA,sBAA4BH,aAAgBL,MAAA","file":"path---older-2017-06-06-cc05da6c7e5abefc4d4f.js","sourcesContent":["webpackJsonp([247066746484451],{\n\n/***/ 566:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/shenhan/iserver/deepcoldy/src/pages/older/2017-06-06.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>注释</h3>\\n<p>例如下图，Vue的data数据时最多的，如果编写成流水账的形式将非常难以维护。\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNbRwly1fg00577bvvj31h80tddjt.jpg\\\">\\n优化后：\\n<img src=\\\"https://ws3.sinaimg.cn/large/006tKfTcly1fg4lht6qfej30j5069wet.jpg\\\">\\n可看到，注释充分利用每行空间。用对象的形式归类数据。</p>\\n<h3>scss</h3>\\n<p>既然引入了scss，就一定要用包裹的形式，伪类再也不要写成<code class=\\\"language-text\\\">::after</code>的形式了，下图是推荐的写法。\\n<img src=\\\"https://ws1.sinaimg.cn/large/006tNc79ly1fgci0aezj2j30a80aujs1.jpg\\\"></p>\\n<h3>class命名</h3>\\n<p>有些人喜欢使用css类去命名html的class，这是非常不讨喜的行为：如下图fl是float的缩写。\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNc79ly1fhfy8jpzbtj30cz03874l.jpg\\\">\\n下图mt3是margin-top3的缩写\\n<img src=\\\"https://ws2.sinaimg.cn/large/006tNc79ly1fhfy5pzb4kj30hl044t98.jpg\\\">\\n看着很难受对吧，看看类似的css更难受。\\n<img src=\\\"https://ws3.sinaimg.cn/large/006tNc79ly1fhfyawobk9j30b30aymxo.jpg\\\">\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNc79ly1fhfybtutqej307x0h0q3n.jpg\\\">\\n这样的代码谁接手维护，谁倒霉。\\n通常推荐的写法是通过功能来定义class名，特别是vue拥有scoped功能(组件内的css可以只在组件内生效)。我们就可以将公用的class类定义的简单点，组件内的class按功能分类。\\n所以个人推荐使用<a href=\\\"http://elemefe.github.io/postcss-salad/\\\">salad</a>的写法。</p>\\n<h3>完成中。。。</h3>\",\"frontmatter\":{\"title\":\"Vue书写注意事项（规范）——整理\",\"date\":\"June 06, 2017\"}}},\"pathContext\":{\"slug\":\"/older/2017-06-06/\",\"previous\":{\"fields\":{\"slug\":\"/older/2017-05-16/\"},\"frontmatter\":{\"title\":\"使用Webhook+nodejs将Git项目代码自动部署服务器\"}},\"next\":{\"fields\":{\"slug\":\"/older/2017-06-07/\"},\"frontmatter\":{\"title\":\"NPM相关\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---older-2017-06-06-cc05da6c7e5abefc4d4f.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"DeepCold Blog\",\"author\":\"DeepCold\"}},\"markdownRemark\":{\"id\":\"/Users/shenhan/iserver/deepcoldy/src/pages/older/2017-06-06.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>注释</h3>\\n<p>例如下图，Vue的data数据时最多的，如果编写成流水账的形式将非常难以维护。\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNbRwly1fg00577bvvj31h80tddjt.jpg\\\">\\n优化后：\\n<img src=\\\"https://ws3.sinaimg.cn/large/006tKfTcly1fg4lht6qfej30j5069wet.jpg\\\">\\n可看到，注释充分利用每行空间。用对象的形式归类数据。</p>\\n<h3>scss</h3>\\n<p>既然引入了scss，就一定要用包裹的形式，伪类再也不要写成<code class=\\\"language-text\\\">::after</code>的形式了，下图是推荐的写法。\\n<img src=\\\"https://ws1.sinaimg.cn/large/006tNc79ly1fgci0aezj2j30a80aujs1.jpg\\\"></p>\\n<h3>class命名</h3>\\n<p>有些人喜欢使用css类去命名html的class，这是非常不讨喜的行为：如下图fl是float的缩写。\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNc79ly1fhfy8jpzbtj30cz03874l.jpg\\\">\\n下图mt3是margin-top3的缩写\\n<img src=\\\"https://ws2.sinaimg.cn/large/006tNc79ly1fhfy5pzb4kj30hl044t98.jpg\\\">\\n看着很难受对吧，看看类似的css更难受。\\n<img src=\\\"https://ws3.sinaimg.cn/large/006tNc79ly1fhfyawobk9j30b30aymxo.jpg\\\">\\n<img src=\\\"https://ws4.sinaimg.cn/large/006tNc79ly1fhfybtutqej307x0h0q3n.jpg\\\">\\n这样的代码谁接手维护，谁倒霉。\\n通常推荐的写法是通过功能来定义class名，特别是vue拥有scoped功能(组件内的css可以只在组件内生效)。我们就可以将公用的class类定义的简单点，组件内的class按功能分类。\\n所以个人推荐使用<a href=\\\"http://elemefe.github.io/postcss-salad/\\\">salad</a>的写法。</p>\\n<h3>完成中。。。</h3>\",\"frontmatter\":{\"title\":\"Vue书写注意事项（规范）——整理\",\"date\":\"June 06, 2017\"}}},\"pathContext\":{\"slug\":\"/older/2017-06-06/\",\"previous\":{\"fields\":{\"slug\":\"/older/2017-05-16/\"},\"frontmatter\":{\"title\":\"使用Webhook+nodejs将Git项目代码自动部署服务器\"}},\"next\":{\"fields\":{\"slug\":\"/older/2017-06-07/\"},\"frontmatter\":{\"title\":\"NPM相关\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/older-2017-06-06.json\n// module id = 566\n// module chunks = 247066746484451"],"sourceRoot":""}